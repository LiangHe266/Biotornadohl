PACS.Filter=function(c,d,a,f,b,e,g){if(!(this instanceof PACS.Filter)){return new PACS.Filter(c,d,a,f,b,e,g)}if(!e){this.init2(c,d,a,f)}else{this.init(c,d,a,f,b,e,g)}};PACS.Filter.prototype.init=function(c,d,a,f,b,e,g){this.name=c;this.morphologicalFilter=false;this.width=d;this.height=a;this.divisor=g;this.data=e;this.setXOrigin(f);this.setYOrigin(b);this.divideData()};PACS.Filter.prototype.init2=function(b,c,a,d){this.init(b,c,a,parseInt(c/2),parseInt(a/2),d,1)};PACS.Filter.prototype.setYOrigin=function(a){if(a>=this.height||a<0){this.yOrigin=parseInt((this.height+1)/2);return false}this.yOrigin=a;return true};PACS.Filter.prototype.setXOrigin=function(a){if(a>=this.width||a<0){this.xOrigin=parseInt((this.width+1)/2);return false}this.xOrigin=a;return true};PACS.Filter.prototype.divideData=function(){if(!this.data){return}var c=this.divisor;if(c==0){c=1}if(c==1){return}var b=this.data;for(var a=0;a<b.length;a++){b[a]/=c}return};PACS.Filter.prototype.process=function(e,q,g){var t=Uint8ClampedArrayCache.get(q*g);var l,a;var f,d,p,o;var c,s,r,k;var n;var m=this.data;var b;for(f=0;f<g;f++){l=f*q;if(f<this.yOrigin){t[l]=0;continue}for(d=0;d<q;d++){if(d<this.xOrigin){t[l+d]=0;continue}c=d-this.xOrigin;s=f-this.yOrigin;if(c<0){c=0}if(s<0){s=0}r=c+this.width;k=s+this.height;if(r>=q){r=q-1}if(k>=g){k=g-1}n=0;b=0;for(o=s;o<k;o++){a=o*q;for(p=c;p<r;p++){n+=e[a+p]*m[b++]}}t[l+d]=n}}return t};function gaussianKernelSig(a,m,l){var h=6*m;var g=6*l;if(h%2==0){h++}if(g%2==0){g++}var k=new Array(h*g);var d=0;if(m==0){m=0.00001}if(l==0){l=0.00001}for(var e=0;e<g;e++){var b=e-(g-1)/2;for(var f=0;f<h;f++){var c=f-(h-1)/2;k[e*h+f]=Math.exp(-0.5*((c*c)/(m*m)+(b*b)/(l*l)));d+=k[e*h+f]}}for(var f=0;f<k.length;f++){k[f]/=d}return new PACS.Filter(a,h,g,k)}function gaussianKernel(b,a,e){if(a%2==0){a++}if(e%2==0){e++}var d=(a-1)/6;var c=(e-1)/6;return gaussianKernelSig(b,d,c)}function gaussianKernel2(a,b){var k=new Array(b*b);var l=(b-1)/6;var e=0;for(var g=0;g<b;g++){var c=g-(b-1)/2;for(var f=0;f<b;f++){var d=f-(b-1)/2;var h=Math.sqrt(c*c+d*d);k[f*b+g]=(-h/(l*l))*Math.exp((-h*h)/(2*l*l));e+=k[f*b+g]}}for(g=0;g<k.length;g++){k[g]/=e}return PACS.Filter(a,b,b,k)}var FilterNone=PACS.Filter("None",0,0,null);var FilterMean=PACS.Filter("Mean",3,3,1,1,[1,1,1,1,1,1,1,1,1],9);var FilterBlur=PACS.Filter("Blur",3,3,1,1,[0,1,0,1,4,1,0,1,0],8);var FilterBlurMore=PACS.Filter("Blur More",3,3,1,1,[1,2,1,2,2,2,1,2,1],14);var FilterSharpen=PACS.Filter("Sharpen",3,3,1,1,[0,-1,0,-1,8,-1,0,-1,0],4);var FilterSharpenMore=PACS.Filter("Sharpen More",3,3,1,1,[-1,-1,-1,-1,12,-1,-1,-1,-1],4);var FilterDefocus=PACS.Filter("Defocus",3,3,[1,1,1,1,-7,1,1,1,1]);var FilterEdge1=PACS.Filter("Edge 1",3,3,[0,-1,0,-1,4,-1,0,-1,0]);var FilterEdge2=PACS.Filter("Edge 2",3,3,[-1,-1,-1,-1,8,-1,-1,-1,-1]);var FilterStrongEdge=PACS.Filter("Strong Edge",5,5,[-2,-2,-2,-2,-2,-2,-3,-3,-3,-2,-2,-3,53,-3,-2,-2,-3,-3,-3,-2,-2,-2,-2,-2,-2]);var FilterOutline=PACS.Filter("Outline",5,5,[1,1,1,1,1,1,0,0,0,1,1,0,-16,0,1,1,0,0,0,1,1,1,1,1,1]);var FilterEmboss=PACS.Filter("Emboss",3,3,[-5,0,0,0,1,0,0,0,5]);PACS.Filters=[FilterMean,FilterBlur,FilterBlurMore,FilterSharpen,FilterSharpenMore,FilterDefocus,FilterEdge1,FilterEdge2,FilterStrongEdge,FilterOutline,FilterEmboss,gaussianKernel("Gaussian (3x3)",3,3),gaussianKernel("Gaussian (5x5)",5,5),gaussianKernel("Gaussian (7x7)",7,7),gaussianKernel("Gaussian (9x9)",9,9),gaussianKernel2("Gaussian 2 (3x3)",3),gaussianKernel2("Gaussian 2 (5x5)",5),gaussianKernel2("Gaussian 2 (7x7)",7)];